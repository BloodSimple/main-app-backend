
spring.datasource.driverClassName=org.postgresql.Driver

#Navodi se baza koja se koristi
spring.datasource.platform=postgres
spring.sql.init.platform=postgres
#Navodi se URL do baze koja je pokrenuta u lokalu na podrazumevanom portu 5432 i na serveru je kreirana ?ema baze pod nazivom "jpa"
#https://www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (ako koristimo Hibernate za kreiranje tabela, SQL deo sa linka nije potreban)
spring.datasource.url=jdbc:postgresql://localhost:5432/BloodSimple

#Navode se kredencijali za konekciju na server baze
spring.datasource.username=postgres
spring.datasource.password=postgres
#system ili admin

#  Swagger and API docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# Rabbit MQ
myapp.rabbitmq.queue1=blood-simple-queue1
myapp.rabbitmq.queue2=blood-simple-queue2
myapp.rabbitmq.exchange=blood-simple-exchange
myapp.rabbitmq.routingKey=blood-simple-routing-key
myapp.rabbitmq.host=localhost
myapp.rabbitmq.port=8080

#Nepohodno za sql skriptu
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

#Umesto da sami pi?emo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako ?elimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji ?e Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true
spring.jpa.generate-ddl = true


#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

#Neophodno da bi Lazy loading radio!
spring.jpa.open-in-view=false


spring.mail.host=smtp.gmail.com
spring.mail.username=isa.mejl.12345@gmail.com
spring.mail.password=sxgaknyzjrzepild
spring.mail.port=465
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable = true

# Solves this problem - The dependencies of some of the beans in the application context form a cycle:
spring.main.allow-circular-references:true
